name: Container Builder

env: {}

on:
  push:
    branches:
      - main
    pull_request:
      branches:
        - main
    workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  discover:
    runs-on: ubuntu-latest
    name: Discover Changes

    outputs:
      changed_images: ${{ steps.changed_images.outputs.images }}
      changed: ${{ steps.changed_images.outputs.changed }}

    steps:
      - uses: actions/checkout@v3
      - name: Get Changed Files
        id: changed_files
        # pinning out of paranoia, this is the modern-node fork of jitterbit/get-changed-files
        uses: masesgroup/retrieve-changed-files@076a92699259d81d1c607bd91f0e1e9d45fd3151

      - name: Find image directories
        id: images
        shell: bash
        run: |
          set -x
          declare -a images
          declare -a images_list

          for image in $(find ./ -maxdepth 2 -name Dockerfile\* | cut -d "/" -f2 | sort -u); do
            images+=("${image}");
            images_list+=("\"${image}\",");
          done

          json_list=$(echo ${images_list[@]} | rev | cut -c 2- | rev)

          echo "Found images: ${images[@]}"
          echo "Found images (JSON): [${json_list}]"
          echo "images=${images[@]}" >> "$GITHUB_OUTPUT"
          echo "images_list=[${json_list}]" >> "$GITHUB_OUTPUT"

      - name: Get changed images
        id: changed_images
        shell: bash
        run: |
          set -x
          declare -a changed_images
          for image in ${{ steps.images.outputs.images }}; do
            if [[ "${{ steps.changed_files.outputs.all }}" =~ $image || "${{ steps.changed_files.outputs.all }}" =~ ".github/workflows/container-build" ]]; then
               if [[ ! "${changed_images[@]}" =~ $image ]]; then
                  changed_images+=("\"${image}\",");
               fi
            fi
          done

          changed=$(echo ${changed_images[@]} | rev | cut -c 2- | rev)

          if [[ -n ${changed} ]]; then
            echo "Changed add-ons: $changed";
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "images=[$changed]" >> $GITHUB_OUTPUT
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})";
          fi

  build:
    needs: discover
    runs-on: ubuntu-latest
    if: needs.discover.outputs.changed == 'true'
    name: Build ${{ matrix.image }} for ${{ matrix.arch }}
    strategy:
      matrix:
        image: ${{ fromJson(needs.discover.outputs.changed_images) }}
        arch: ["aarch64", "amd64", "armhf", "arm/v7"]

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Log in to the Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/offbyone/${{ matrix.image }}
          flavor: |
            latest=auto
          tags: |
            type=edge,branch=main
            type=pep440,pattern={{raw}}
            type=pep440,pattern=v{{major}}.{{minor}}
            type=ref,event=pr

      - uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.image }}
          platforms: linux/${{ matrix.arch }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
